ul output {font-size:1.1rem;}
input:is([type=number],:not([type])),data {font-size:.85rem;}
h3 {
    font-size:.8rem;
    span+span~* {font-size:1.5em;}
}
ul+div,label:has([id|=toggle]),em {font-size:.75rem;}
label:has([type=radio])::before {font-size:.5rem;}
:host(buff-form),#delete {font-size:.85rem;}
#pref {
    font-size:.8rem;
    #scroll {font-size:2em;}
}

input,select,option {
    border-radius:0; outline:none;
}
.focus {
    background:lightsteelblue;
}
label:has(input[type=radio]:checked)::before {
    content:'▼'; color:yellow; position:absolute; top:-1.2em; left:50%; transform:translateX(-50%);
}
label:has(:is([type=checkbox],[type=radio]):not(:is([id|=toggle],[name=shape])):not(:checked)),
:is(label:has([name=attBoss]),input[name=ΔattBoss]):has(~label input[name=boss]:not(:checked)),
label:has(input[id|=switch]:not(:checked))~* {
    filter:saturate(0) brightness(.7);
}
label[title] {
    position:relative;
    display:inline-flex;

    &::before {content:initial !important;}
    &::after {
        content:attr(title)'%'; line-height:normal;
        position: absolute; left:50%; top:50%; transform:translate(-50%,-50%);
        background:rgba(0,0,0,.3);
        padding:0 .1em;
    }
}
h3 {
    text-align:right;
    span {
        display:block;
        margin-bottom:.1rem;
    }
    span~* {line-height:1.2rem;}
}
b {
    white-space:nowrap;

    &>:not(prop-icon) {display:inline-block;}
    &>* {vertical-align:middle;}
    i {
        &:only-child {display:none;}
        &:last-child {margin-right:0;}
        &:first-child::before, &:last-child::after {content:'∅'; color:#00e5d8;}
        &:first-child::before {margin-right:.25em;}
        &:last-child::after {margin-left:.25em;}
    }
}
:is(prop-icon,i)+data {
    width:3.3rem;
    border-bottom:.05rem solid var(--fg);
    text-align:center;
}
:host(:not(.delete)) #delete,:host(.delete) [type=color],
:host(.rune) .before~* {
    display:none;
}
:host(power-analyzer) {
    max-width:19rem;

    #pref {
        display:flex; align-items:center;
        margin-bottom:.5rem;

        #delete>* {pointer-events:none;}
        #scroll {filter:drop-shadow(0 0 0.5px white);}
        input[name=name] {
            width:8em; height:1.4rem;
            text-align: center; color:white;
            border-radius:9em;
            margin:0 .5em;
        }
        span:has(~label) {margin-left:auto;}
    }
    ul+div {
        display:flex; align-items:end;
        margin-bottom:1rem;
        
        label {
            text-align:center; color:darkgrey;
            width:2.5em;
            margin:0 .25em -.25em 0;
            position:relative;
    
            :host-context(:lang(en)) &:first-child {margin-right:.75em;}
            &:has(input:checked) {color:var(--fg);}
            output {line-height:1rem;}
        }
        h3 {margin-left:auto;}
    }
    output {
        color:var(--bg); background:lightgoldenrodyellow;
        line-height:1.2rem;
    }
    ul {
        display:grid; gap:0 .2em; grid-template: auto / repeat(4,1fr);

        li {
            align-self:end;
            text-align:right;

            &>* {vertical-align:middle;}
            :is(output,data) {
                display:block;
                text-align:center;
            }
            data:not(.posi):not(.nega)::after {
                content:'s'; visibility:hidden;
            }
            &:has(data[value=NaN]) {display:none;}
        }
        &.all-CA li:not(:has(prop-icon[prop=CAD])),
        &.no-CA li:has(prop-icon[prop=CAD]),
        &.no-HS li:has(prop-icon[prop=HS]),
        &.no-BA li:has(prop-icon[prop=BAD]) {
            opacity:.5;
        }
    }
    h3 output {
        padding:0 .25em;
        min-width:4.6rem; display:inline-block;    
        text-align:center;
    }
    details {
        margin:.5em auto;

        &.disabled {
            color:darkgray;
            pointer-events:none;

            b {display:none;}
        }
        summary {
            text-align:left;
            img {margin:0 .1em;}
            img[alt=TD] {width:1.25em;}
            .conditional {filter:hue-rotate(-100deg);}
    
            b {
                float:right;
                margin-top:-.1em;
            }
        }
        &:has(enemy-form) data {width:3.8rem;}
        &:has(enemy-form) prop-icon:nth-of-type(2) {margin-left:.1rem;}
    }
}
:host(:is(char-form,buff-form,rune-form)) form {
    display:grid; 

    >* {align-self:end;}
    .formula {
        background:lavender;

        &:invalid {
            border:red; background: pink;
        }
    }
}
:host(:is(char-form,buff-form,rune-form)) div:has(data) {
    display:flex; align-items:center;
    margin-bottom:.5em;

    b {display:contents;}
    prop-icon {
        margin-right:.15em;

        b:not(:first-child) &,
        &:has(+data:not(:first-of-type)) {
            margin-left:auto;
        }
        &:first-child {margin-left:-.1em;}
    }
}
:host(char-form) form {
    gap:.1rem .15rem; justify-content:center;
    margin:0 0 .5em -.1em;

    :host(.diff) & {grid-template:auto / repeat(4,1fr);}
    :host(.rune) & {grid-template:auto / 5fr 4fr 5fr 4fr;}
    prop-icon {
        vertical-align:middle;
        margin-right:.1em;
    }
    .attacking,h3 {color:darkorange;}
    .damaging {background:lightgoldenrodyellow;}
    label input[type=number] {
        width:calc(100% - 1.1rem);

        &:is([placeholder=CR],[placeholder=GP],[placeholder=CAR]) {
            color:darkgray;
        }
    }
    .formula {width:100%;}
    label+data {
        border-bottom:.05rem solid var(--fg);
    }
    h3 {
        grid-area:8/3/10/5;
        margin-bottom:-.2em;
    }
    :host(.diff) & .ante,
    :host(.rune) & .formula {
        display:none;
    }
}
:host(buff-form) input {
    width:3em;

    &:is([name=coef]) {width:6.1em;}
    &:is([name=coef],[name=TD],[name=BAP],[name=enemyLv],[name=Lv],[name=damage],[name=from-damage]) {
        background:lightskyblue;
    }
    &:is([name=attd],[name=attBoss]),
    :host(.sp) &:is([name=sp],[name=sp13],[name=sp4],[name=spA]),
    :host(.sp13) &:is([name=sp],[name=sp13]),
    :host(.sp4) &:is([name=sp],[name=sp4]),
    :host(.spA) &:is([name=sp],[name=spA]) {
        background:lightgoldenrodyellow;
    }
}
:host(buff-form) form {
    grid-template-columns:1fr auto 1.02fr auto; gap:.1rem .15rem;
    margin-top:.25em;

    >label {
        display:flex; justify-content:space-between; align-items:center;
        grid-column:auto / span 2;

        &:nth-of-type(even) {margin-left:.2em;}
    }
    div:has([value=after]:checked)~section:first-of-type,
    div:has([value=before]:checked)~section:last-of-type {
        display:none;
    }
    .diff,section {
        grid-column: 1/-1;
    }
    div.diff {
        margin-top:.5rem;
        justify-self:end;
    }
    div.diff label {
        width:6em; display:inline-block;
        position:relative;
        color:var(--bg);

        &:first-child {margin-right:-1em;}
        &:has(:checked) {z-index:2;}
        &::before {content:unset;}
        &::after {
            content:'';
            width:100%;
            border-style:solid; border-width:0 1.3em 1.3em 1.3em;
            border-color:transparent transparent var(--fg) transparent;
            position:absolute; left:0; top:-.05rem; z-index:-1;
        };
    }
    [name=boss] {
        display:revert;
        width:1.2rem; height:1.2rem;
        margin:0;
    }
    section {
        padding:1rem 0 .5rem 0; 

        :host(.diff) & {
            margin-top:-.1rem;
            border-top:.1rem solid;
        }
        img {
            &:not([src^='/rune']) {
                height:4.5em; 
                margin:-.5em -.1em;
            }
            &[src^='/rune'] {
                width:2em; height:2em;
                margin:-.2em .2em;
            }
        }
        b {
            margin-left:.1em;
            vertical-align:.7em;
        }
        u {line-height:1em;}
        input[type=number] {margin:0 .2em;}
    }
    :host(.rune) & label:has([name=rune]) {
        visibility:hidden;
    }
    :host(.rune) & :is(.diff,.formula) {
        display:none !important;
    }
    :host(.diff) & label:has(+.formula) {
        grid-column:auto / span 1;

        input {width:2.9em;}
    }
    label.lock span {color:violet;}
    label.lock [name=boss] {accent-color:violet;}
}
:host(buff-form.rune) b:has([prop=HS]) {display:none;}
:host(rune-form) form {
    display:grid; grid-template:3em auto / repeat(5, 3em); 
    justify-content:center;
    margin-top:.5em;

    label:not(.rune-slot) {
        background:url(/rune/shape/0.webp) center / contain no-repeat;
        width:3em; height:3em; display:inline-flex; align-items:center; justify-content:center;
        position:relative;
    }
    label:nth-of-type(2):has([name=shape]),fieldset:nth-of-type(2) label:has(input) {background-image:url(/rune/shape/3.webp)};
    label:nth-of-type(3):has([name=shape]),fieldset:nth-of-type(3) label:has(input) {background-image:url(/rune/shape/4.webp)};
    label:nth-of-type(4):has([name=shape]),fieldset:nth-of-type(4) label:has(input) {background-image:url(/rune/shape/5.webp)};
    label:nth-of-type(5):has([name=shape]),fieldset:nth-of-type(5) label:has(input) {background-image:url(/rune/shape/6.webp)};

    label::before {top:-.6em !important;}
    label data {align-self:end;}
    label:has(input:checked)+fieldset {visibility:visible;}
    fieldset {
        width:11.75em;
        visibility:hidden;
        margin:.5em auto;
        grid-area:2/1/3/6;
        position:relative;
    }
    figure {
        width:2em; height:calc(50% - 1em);
        display:flex; flex-direction:column; justify-content:space-evenly;
        border:.15rem solid; border-radius:.2em;

        &:first-of-type {
            grid-area:2/1/3/2; align-self:start;
            border-right:none;
            margin-top:1em; padding-left:.25em;
        }
        &:last-of-type {
            grid-area:2/5/3/6; justify-self:flex-end;
            align-items:flex-end;
            border-left:none;
            margin-bottom:1em; padding-right:.25em;
        }
    }
    input:not([type]) {
        display:block;

        .from & {width:100%;}
        .to & {
            width:calc(100% - 1em);
            z-index:1; position:relative;
        }
    }
    em {
        line-height:.9;
        min-height:2em; max-height:2em;
        display:block;
        padding-top:.2em;
        z-index:1; position:relative;

        &:not(:empty)::before {content:'❗';}
        .from & {text-align:left;}
        .to & {text-align:right;}
    }
    select {
        position:absolute; right:0; bottom:0;
        width:100%;
        appearance:none;
        background:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0,-100 120,250'><polygon points='0,0 100,0 50,50'/></svg>") right center / contain no-repeat,white;
    }
    .change {
        display:flex; align-items:center;
    }
    classic-rune {pointer-events:none;}
}
:host(enemy-form) {
    form {
        display:flex; gap:.15rem;

        >* {align-self:end;}

        div {
            text-align:right;
            min-width:2.7em;

            prop-icon {font-size:.9rem;}
            >prop-icon {display:block; height:1em;}
            b {display:flex; justify-content:end;}
        }
        div,&>label,article {
            overflow:scroll hidden;
        }
        :is(div,&>label,article)::-webkit-scrollbar {
            background:transparent;
            height:.4rem;
        }
        article {
            display:flex; align-items:end;

            &::-webkit-scrollbar-thumb {
                background:var(--fg);
                border-radius:9em;
            }
        }
        label {
            font-size:.8rem;
            min-width:5.1em;

            img {
                margin-bottom:-.2em;
                height:4em;
            }
            span,data,small {display:block;}
            span:lang(zh) {font-size:.7rem;}
            span {min-height:1.8rem;}
            small {
                line-height:1.1;
                font-size:.9em;
                margin-bottom:.1rem;
            }
            data {
                line-height:.9rem; 
                
                &::before {line-height:.7em;}
            }
            [value=NaN] {visibility:hidden;}
        }

    }
}
